openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        '201':
          description: Test for standard type in response
          content:
            application/json:
              schema:
                type: integer
                format: int64
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        $ref: '#/components/requestBodies/CreatePetRequest'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          $ref: "#/components/responses/SinglePetResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a pet
      operationId: updatePet
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UpdatePetRequest"
      responses:
        '200':
          $ref: "#/components/responses/SinglePetResponse"
        default:
          description: Something else happened
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /transactions/{userId}/:
    get:
      summary: Info about specific transaction
      operationId: getTransactionById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The id of a transaction to retrieve
      responses:
        '200':
          description: Ok response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        birthDate:
          type: string
          format: date
        created:
          type: string
          format: datetime
        weight:
          type: number
        height:
          type: number
          format: float
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Messages:
      type: array
      items:
        type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Transaction:
      oneOf:
        - $ref: '#/components/schemas/Purchase'
        - $ref: '#/components/schemas/Refund'
    Purchase:
      type: object
      properties:
        id:
          type: integer
        productId:
          type: integer
        quantity:
          type: integer
        totalPaid:
          type: integer
        timestamp:
          type: string
          format: datetime
      required:
        - id
        - productId
        - quantity
        - totalPaid
        - timestamp
    Refund:
      type: object
      properties:
        id:
          type: integer
        purchaseId:
          type: integer
        refunded:
          type: integer
        timestamp:
          type: string
          format: datetime
      required:
        - id
        - purchaseId
        - refunded
        - timestamp
  requestBodies:
    UpdatePetRequest:
      description: Update a pet in the store
      required: false
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Pet"
    CreatePetRequest:
      description: Create a new pet in the store
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
  responses:
    SinglePetResponse:
      description: Successful operation
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
